{"version":3,"sources":["Components/navbar.jsx","Components/counter.jsx","Components/counters.jsx","generatePdf.jsx","App.js","serviceWorker.js","index.js"],"names":["navBar","totalCounters","quizName","Fragment","className","Counter","index","this","props","counter","value","children","formatCount","onClick","onIncrement","onDecrement","disabled","check","onReset","onDelete","id","onChangeName","Component","Counters","counters","onResetAll","map","key","Name","generatePdf","Qname","host","doc","jsPDF","setFont","setFontSize","text","length","date","Date","t","getDay","day","d","getDate","m","getMonth","y","getFullYear","hr","getHours","min","getMinutes","sec","getSeconds","i","content","slice","addPage","save","c","App","state","name","incrementBy","decrementBy","command","editname","handelIncrement","indexOf","setState","handelDecrement","handelChangeName","confirmChangeName","onNameEdit","event","target","handelDelete","counterId","confirmDelete","handelResetAll","confirmResetAll","handelReset","confirmReset","onSearch","onEnter","search","confirmEntery","insert","alert","onQuiz","onHost","onEnterQuiz","document","getElementById","style","opacity","onEnterHost","elm1","display","height","elm2","diplay","setAttribute","onSearchEnter","toLowerCase","onIncChange","parseInt","onDecChange","onCommand","handelSave","sortIt","onEnterCommand","help","sort","a","b","filterOut","startsWith","l","split","stud","filter","includes","ctrlbrc","confirmAlert","title","message","type","autoFocus","placeholder","onChange","buttons","label","elm","onKeyDown","registor","controler","onKeyUp","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.359f3fb7.chunk.js","sourcesContent":["import React from 'react';\r\nconst navBar= ({totalCounters,quizName})=>{\r\n    return ( \r\n        <React.Fragment> \r\n            <nav >\r\n                <h1 className=\"scrhndl\">\r\n                    SCORE HANDLER{\" \"}<span className=\"Qname\">{quizName}</span>\r\n                </h1>\r\n            </nav>\r\n            <br/><br/><p>PARTICIPANTS:{\" \"}<b>{totalCounters}</b></p>\r\n        </React.Fragment>\r\n        );\r\n}\r\n\r\n \r\nexport default navBar;","import React, { Component } from 'react';\r\nclass Counter extends Component {\r\n    check(index){\r\n        if (this.props.counter.value === 0)\r\n            return 'disabled';\r\n        else\r\n            return '';\r\n    }\r\n    render() { \r\n        const{children,counter}=this.props\r\n        return(\r\n            <div className='contain-student'>\r\n                {children}\r\n                <h4>SCORE:{\" \"}{this.formatCount()}</h4>\r\n                <button className='green' onClick={\r\n                        ()=>this.props.onIncrement(counter)}>Increment</button>\r\n                <button className='apple' onClick={\r\n                        ()=>this.props.onDecrement(counter)}>Decrement</button>\r\n                <button className='yellow' disabled={this.check(counter)} onClick={\r\n                        ()=>this.props.onReset(counter)}>Reset</button>\r\n                <button className='red'  onClick={\r\n                        ()=>this.props.onDelete(counter.id)}>Remove</button>\r\n                <button className='teal'  onClick={\r\n                        ()=>this.props.onChangeName(counter)}>Edit Name</button>\r\n            </div >\r\n        );\r\n    }\r\n    \r\n    formatCount()\r\n    {\r\n        const{value}=this.props.counter;\r\n        return value===0?'Zero':value;\r\n    }\r\n    \r\n}\r\n \r\nexport default Counter;","import React, { Component } from 'react';\r\nimport Counter from './counter'\r\nclass Counters extends Component {\r\n    render() { \r\n        const {counters,onResetAll,onReset,onDelete,onIncrement,onDecrement,onChangeName}=this.props //object discturturing\r\n        return (\r\n            <div>\r\n                <button  className=\"red\" onClick={onResetAll}>Reset All</button><br/><br/>\r\n                <h4>PARTICPANT(S):</h4>\r\n                {counters.map(counter => \r\n                    <Counter key={counter.id} \r\n                             counter={counter} \r\n                             onIncrement={onIncrement} \r\n                             onDecrement={onDecrement}\r\n                             onReset={onReset}\r\n                             onDelete={onDelete}\r\n                             onChangeName={onChangeName}>\r\n                             \r\n                        <h2>{counter.Name}</h2>\r\n                    </Counter>\r\n                )}\r\n            </div>\r\n          );\r\n    }\r\n    \r\n}\r\n \r\nexport default Counters;","import jsPDF from 'jspdf'\r\nexport function generatePdf(counters,Qname,host){\r\n    let doc = new jsPDF('p','pt')\r\n    doc.setFont(\"Times\",'bold')\r\n    doc.setFontSize(30)\r\n    doc.text(170,50,\"SCORE HANDLER\")\r\n    \r\n    doc.setFontSize(22)\r\n    doc.text(30,100,`Quiz Name: ${Qname}`)\r\n    doc.text(30,150,`Host: ${host}`)\r\n\r\n    doc.setFontSize(20)\r\n    doc.setFont(\"Helvetica\",'')\r\n    doc.text(400,150,`Participants: ${counters.length}`)\r\n\r\n    doc.setFontSize(15)\r\n    doc.setFont(\"Comic Sans\",'')\r\n    doc.text(30,120,`Date: ${getDate()}`)\r\n\r\n\r\n    for(let i=0; true; i += 25 ){\r\n        doc.setFont(\"Courier\",'bold')\r\n        doc.setFontSize(20)\r\n        if(i===0)\r\n            doc.text(50,200,\"PARTICIPANTS\\t\\t      SCORE\")\r\n        else\r\n            doc.text(50,120,\"PARTICIPANTS\\t\\t      SCORE\")\r\n        doc.setFont(\"Courier\",'')\r\n        if(i+25-counters.length < 0){\r\n            if(i===0)\r\n                doc.text(content(counters.slice(i,i+25)),70,230)\r\n            else\r\n                doc.text(content(counters.slice(i,i+25)),70,170)\r\n        }\r\n        else{\r\n            if(i===0)\r\n                doc.text(content(counters.slice(i,counters.length)),70,230)\r\n            else\r\n                doc.text(content(counters.slice(i,counters.length)),70,170)\r\n            \r\n            doc.setFontSize(15)\r\n            doc.text(\"@Soumyanetra\",220,820)\r\n            break;\r\n        }\r\n        doc.setFontSize(15)\r\n        doc.text(\"@Soumyanetra\",220,820)\r\n        doc.addPage();\r\n    }\r\n    doc.save(`${Qname} Score_ScoreHandler.pdf`)\r\n}\r\nfunction content(counters){\r\n    return counters.map(c => {\r\n        if(c.Name.length <= 10){\r\n            for(let i=c.Name.length; i< 10; ++i)\r\n                c.Name +=\" \"\r\n            return c.Name+\"\\t\\t\\t\"+c.value+\"\\n\"\r\n        }\r\n        else if(c.Name.length <= 18){\r\n            for(let i=c.Name.length; i< 18; ++i)\r\n                c.Name +=\" \"\r\n            return c.Name+\"\\t\\t\"+c.value+\"\\n\"\r\n        }\r\n        else{\r\n        for(let i=c.Name.length; i<= 25; ++i)\r\n            c.Name +=\" \"\r\n        return c.Name+\"\\t\"+c.value+\"\\n\"\r\n        }\r\n        \r\n    })\r\n}\r\nfunction getDate()\r\n{\r\n    const date = new Date()\r\n    const t = date.getDay()\r\n    const day = (t===0)?'Sunday':(t===1)?'Monday':(t===2)?'Tuesday':(t===3)?'Wedday':(t===4)?'Thursday':(t===5)?'Friday':'Saturday'\r\n    const d = date.getDate()\r\n    const m = date.getMonth()\r\n    const y = date.getFullYear()\r\n    const hr = date.getHours()\r\n    const min = date.getMinutes()\r\n    const sec = date.getSeconds()\r\n    return d+\"-\"+(m+1)+\"-\"+y+\" (\"+day+\") [\"+hr+\":\"+min+\":\"+sec+\"]\"\r\n}","import React, {Component} from 'react';\nimport NavBar from './Components/navbar';\nimport Counters from './Components/counters'\nimport {confirmAlert} from 'react-confirm-alert';\nimport {generatePdf} from './generatePdf'\nclass App extends Component{\n  state = {  \n        counters:[],\n        name:'',\n        incrementBy:1,\n        decrementBy:1,\n        command:'',\n        editname:'',\n        Qname:'',\n        host:''\n    }\n    handelIncrement=(counter)=>\n    {\n        const counters=[...this.state.counters]\n        const index= counters.indexOf(counter)\n        counters[index]={...counter}\n        counters[index].value += this.state.incrementBy;\n        this.setState({counters})\n    }\n    handelDecrement=(counter)=>\n    {\n        const counters=[...this.state.counters]\n        const index= counters.indexOf(counter)\n        counters[index]={...counter}\n        counters[index].value -= this.state.decrementBy;\n        this.setState({counters})\n    }\n    handelChangeName=(counter)=>{\n      this.confirmChangeName(counter);\n    }\n    confirmChangeName(counter){\n      confirmAlert({\n        title: 'Name Editor',\n        message:[<div id=\"edt\" style={{'text-align':'left', 'color':'black'}}>\n                    <b>Current Name:{\" \"}</b>{counter.Name}<br/><br/>\n                    <label>Type <b>New Name</b> and hit ENTER</label> <br/>\n                    <input id=\"edtnm\" type='text' className='form-control' \n                      autoFocus \n                      placeholder='New Name' \n                      onChange={this.onNameEdit}/>\n                       </div>\n                ],\n                buttons:[\n                {\n                  label:'Proceed',\n                  className:'green adj',\n                  onClick: ()=> {\n                    if(this.state.editname!==''){\n                        const counters=[...this.state.counters]\n                        const index= counters.indexOf(counter)\n                        counters[index].Name=this.state.editname\n                        this.setState({counters,editname:''})\n                    }\n                    else\n                      alert('Type a Name before Proceeding!!\\n\\nNo changes made')\n                  }\n                },\n                {\n                  label:'Cancel',\n                  className:'red adj',\n                  onClick: ()=>{return false}\n                }\n              ]\n      });\n    }\n    onNameEdit = (event)=>{ \n      this.setState({editname: event.target.value})\n    }\n    handelDelete=(counterId) =>\n    {\n        this.confirmDelete(counterId);\n    }\n    confirmDelete(counterId)\n    {\n      confirmAlert({\n              title: \"This will Delete this Record Permanently\",\n              message:\"Do you want to proceed?\",\n              buttons:[\n                {\n                  label:'YES',\n                  className:'green adj',\n                  onClick: ()=> {\n                        const counters=this.state.counters.filter(c => c.id !== counterId)\n                        this.setState({counters})\n                      }\n                },\n                {\n                  label:'No',\n                  className:'red adj',\n                  onClick: ()=>{return false}\n                }\n              ]\n            });\n    }\n    handelResetAll= () =>\n    {\n        this.confirmResetAll();\n    }\n    confirmResetAll()\n    {\n      confirmAlert({\n              title: \"Reset All will set all scores to 'Zero'\",\n              message:\"Do you want to proceed?\",\n              buttons:[\n                {\n                  label:'YES',\n                  className:'green adj',\n                  onClick: ()=> {\n                    const counters=this.state.counters.map(c =>{\n                        c.value=0\n                        return c\n                      }\n                    )\n                    this.setState({counters})\n                  }\n                },\n                {\n                  label:'No',\n                  className:'red adj',\n                  onClick: ()=>{return false}\n                }\n              ]\n            });\n    }\n    handelReset= (counter) =>\n    {\n        this.confirmReset(counter);\n    }\n    confirmReset(counter)\n    {\n      confirmAlert({\n              title: \"Reset will set the score to 'Zero'\",\n              message:\"Do you want to proceed?\",\n              buttons:[\n                {\n                  label:'YES',\n                  className:'green adj',\n                  onClick: ()=> {\n                    const counters=[...this.state.counters]\n                    const index= counters.indexOf(counter)\n                    counters[index]={...counter}\n                    counters[index].value=0;\n                    this.setState({counters})\n                  }\n                },\n                {\n                  label:'No',\n                  className:'red adj',\n                  onClick: ()=>{return false}\n                }\n              ]\n            });\n    }\n    onSearch = (event)=>{ \n      this.setState({name: event.target.value})\n    }\n    search(){\n      if(this.state.counters.length > 0){\n        for(let i=0;i<this.state.counters.length;i++){\n          if(this.state.name===this.state.counters[i].Name)\n            return true;\n        }\n      }\n      return false;\n    }\n    onEnter = (event) => {\n      if(event.key==='Enter')\n      {\n        if(this.state.name!==''){\n          if(!this.search())\n            this.insert();\n          else\n            this.confirmEntery();\n        }\n        else\n          alert(\"Type a Name before hitting 'ENTER'!!\")\n        event.target.value=''\n      }\n    }\n    onQuiz=(event)=>{\n      this.setState({Qname: event.target.value})\n    }\n    onHost=(event)=>{\n      this.setState({host: event.target.value})\n    }\n    onEnterQuiz = (event) => {\n      if(event.key==='Enter')\n      {\n        if(this.state.Qname.length !== 0)\n          document.getElementById('next').style.opacity=1\n        else\n          alert(\"Type Quiz Name before hitting 'ENTER'!!\")\n      }\n    }\n    onEnterHost = (event)=>{\n      if(event.key==='Enter')\n      {\n        if(this.state.host.length !== 0){\n          const elm1 = document.getElementById('initial').style\n          elm1.display='none'\n          elm1.height=0\n\n          const elm2 = document.getElementById('next')\n          elm2.style.diplay='none'\n          elm2.style.opacity=0\n          elm2.style.height=0\n          document.getElementById('nextInp').setAttribute('disabled','true')\n          document.getElementById('next2').style.opacity=1\n          document.getElementById('welcm').style.opacity=1\n        }\n        else\n          alert(\"Type Host Name before hitting 'ENTER'!!\")\n      }\n    }\n    onSearchEnter=(event)=>{\n        this.setState({command: event.target.value.toLowerCase()})\n    } \n    insert()\n    {\n      const counters=[...this.state.counters]\n      counters[counters.length]={id:this.state.counters.length, Name:this.state.name, value:0}\n      this.setState({counters});\n    }\n    confirmEntery()\n    {\n      confirmAlert({\n              title: \"'\"+this.state.name+\"' already Exist!!\",\n              message:\"Do you want duplicacy? 'NO' Recomended\",\n              buttons:[\n                {\n                  label:'YES',\n                  className:'green adj',\n                  onClick: ()=> {\n                    this.insert();\n                  }\n                },\n                {\n                  label:'No',\n                  className:'red adj',\n                  onClick: ()=>{return false}\n                }\n              ]\n            });\n    }\n  onIncChange=(event)=>{\n      this.setState({incrementBy:parseInt(event.target.value)})\n  }\n  onDecChange=(event)=>{\n      this.setState({decrementBy:parseInt(event.target.value)})\n  }\n  onCommand=(event)=>{\n    this.setState({command:event.target.value.toLowerCase()})\n  }\n  handelSave=()=>{\n    this.sortIt()\n    generatePdf(this.state.counters,this.state.Qname,this.state.host)\n  }\n  onEnterCommand = (event) => {\n    const{command}=this.state\n      if(event.key==='Enter')\n      {\n        if(command!==''){\n          if(command==='sort'){\n            this.setState({command:''})\n            this.sortIt()}\n          else if(command==='help'){\n            this.setState({command:''})\n            this.help()}\n        }\n        else\n          alert(\"Type a Name before hitting 'ENTER'!!\")\n        event.target.value=''\n      }\n    }\n  sortIt=()=>{\n    this.state.counters.sort((a,b)=>{\n      return b.value-a.value\n    })\n  }\n  help(){\n    confirmAlert({\n              title: 'Help Desk',\n              message:[\"Put in your commands to get the result is your way\",\n                      <div style={{'text-align':'left', 'margin':'50px'}}>\n                        <b>COMMANDS</b><br/><br/>\n                        <b>'sort':</b> Sorts the existing data in descending order of Scores<br/><br/>\n                        <b>'top n':</b> Sorts the existing data and shows only the top 'n' participants<br/><br/>\n\n                        <br/><br/><b>SAVE BUTTON</b><br/><br/>\n                        Sorts and converts the existing data into a .pdf file and downloads it to your device\n                       </div>,<br/>,<br/>\n                       ],\n              buttons:[\n                {\n                  label:'OK',\n                  className:'green adj',\n                  onClick: ()=> {\n                    return\n                  }\n                }\n              ]\n    })\n  }\n  filterOut=()=>{\n    const{command}=this.state\n    if(command.startsWith('top')){\n      this.sortIt()\n      const l=parseInt(command.split(' ')[1])\n      if(l<=this.state.counters.length){\n            const stud=this.state.counters.slice(0,l).map(c=>{\n            return c\n          })\n        return stud;\n      }\n      else\n         return this.state.counters;\n    }\n    else{\n      let stud=this.state.counters.filter(c=>\n          c.Name.toLowerCase().startsWith(command)\n      )\n      if(stud.length===0)\n        stud=this.state.counters.filter(c=>\n          c.Name.toLowerCase().includes(command)\n      )\n      return stud;\n    }\n  }\n  check(){\n        if (this.state.counters.length === 0)\n            return 'no-disp';\n        else\n            return 'disp';\n    }\n  controler(){\n    const elm=document.getElementById('conpnl')\n    if(elm.className==='control')\n      elm.className='control-on'\n    else\n      elm.className='control'\n  }\n  registor(){\n    const elm=document.getElementById('rgspnl')\n    if(elm.className==='control')\n      elm.className='control-rg'\n    else\n      elm.className='control'\n  }\n  ctrlbrc=()=>{\n    if(this.state.Qname !== '')\n      return \"[\"+this.state.Qname+\"]\"\n    return \"\"\n    }\n  render(){\n      return (\n        <React.Fragment>\n          <NavBar totalCounters={this.state.counters.length} \n          quizName={this.ctrlbrc()}/>\n          <main className=\"container\">\n            <div id=\"initial\" style={{'fontStyle':'italic'}}><br/><br/>\n              <label>Type Quiz Name and hit '<b>ENTER</b>' :</label><br/><br/>\n              <input type='text' className='form-control' \n                      autoFocus\n                      placeholder='Quiz Name' \n                      onChange={this.onQuiz} \n                      onKeyDown={this.onEnterQuiz}/><br/><br/>\n            </div>\n            <div id=\"next\" style={{'opacity':0, 'fontStyle':'italic'}}>\n              <label>Type Host Name and hit '<b>ENTER</b>' :</label><br/><br/>\n              <input id='nextInp' type='text' className='form-control' \n                      autoFocus\n                      placeholder='Host Name' \n                      onChange={this.onHost} \n                      onKeyDown={this.onEnterHost}/>\n            </div>\n            <h3 id=\"welcm\" style={{'opacity':0, 'fontStyle':'italic', 'color':'#339999'}} >WELCOME {this.state.host}</h3>\n            <div id=\"next2\" style={{'opacity':0, 'fontStyle':'italic'}}>\n              <button className=\"controler other\" onClick={this.registor}>Register Participants</button>\n              <div id=\"rgspnl\" className=\"control-rg\"><br/>\n                <label>Type Student Names and hit '<b>ENTER</b>' to <b>Add</b> Participants:</label><br/><br/>\n                <input type='text' className='form-control' \n                    autoFocus\n                    placeholder='Name' \n                    onChange={this.onSearch} \n                    onKeyDown={this.onEnter}/>\n              </div>\n            </div>\n            <div id=\"store\" className={this.check()}>\n              <br/><br/>\n              <button className=\"controler other\" onClick={this.controler}>Control Panel</button><br/><br/>\n              <div id=\"conpnl\" className=\"control\" style={{'fontStyle':'italic'}}>\n                <label>Enter <b>Update</b> Parameters (DEFAULT: 1):</label><br/><br/>\n                <input type='Number' placeholder='Increment By'  onChange={this.onIncChange}/><br/><br/>\n                <input type='Number' placeholder='Decrement By' onChange={this.onDecChange}/><br/><br/>\n                <label>Enter <b>Commands</b> [Type '<b>HELP</b>' for '<b>Help Desk</b>']:</label>\n                <br/><br/><input type='text' placeholder='Commands'  \n                              onChange={this.onCommand} \n                              onKeyDown={this.onEnterCommand}/><br/><br/>\n                <button className=\"grn\" onClick={this.handelSave}>Save</button><br/><br/>\n              </div><br/>\n              <label style={{'fontStyle':'italic'}}>Type Participant's Name to <b>Search</b> Participants:</label><br/><br/>\n              <input type='text' className='form-control' placeholder='Name' onKeyUp={this.onSearchEnter} />\n                    <Counters \n                            counters={this.filterOut()}\n                            onIncrement={this.handelIncrement} \n                            onDecrement={this.handelDecrement} \n                            onReset={this.handelReset}\n                            onDelete={this.handelDelete}\n                            onResetAll={this.handelResetAll}\n                            onChangeName={this.handelChangeName}>\n                    </Counters>\n             </div>\n          </main>\n        </React.Fragment>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './mystyle.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <div className='footer'><div>@Soumyanetra</div></div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}